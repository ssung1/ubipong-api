plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyVersion}"
    id 'java'
    // automatically creates getters, setters, and other boilerplate
    id 'io.freefair.lombok' version "${lombokVersion}"
}

sourceCompatibility = 11
// name of the output jar
archivesBaseName="ubipong"

repositories {
    mavenCentral()
    jcenter()
}

// exposes test data to combined report
configurations {
    binaryTestResultsElements {
        canBeResolved = false
        canBeConsumed = true
        attributes {
            attribute(Category.CATEGORY_ATTRIBUTE, objects.named(Category, Category.DOCUMENTATION))
            attribute(DocsType.DOCS_TYPE_ATTRIBUTE, objects.named(DocsType, 'test-report-data'))
        }
        outgoing.artifact(test.binaryResultsDirectory)
    }
}

dependencies {
    implementation project(':tournament-manager-adapter')
    implementation project(':tournament-manager-dto')
    implementation project(':tournament-manager-domain')
    implementation project(':rating-manager-dto')

    // spring stuff
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // database stuff
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.liquibase:liquibase-core'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java:8.0.9-rc'

    // web stuff
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.security:spring-security-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // swagger API documentation
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    // automatic refresh
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

test {
    // disable html report because we want to view the combined report instead
    // reports.html.enabled = false
    // for junit report, we simply save them to a shared path
    testResultsDirName = "${rootProject.buildDir}/test-results/${project.name}"
    useJUnitPlatform()
}

